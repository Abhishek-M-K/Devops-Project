#SPDX-License-Identifier: MIT-0
---
# tasks file for elysiajs-app
- name: Install unzip
  become: true
  ansible.builtin.apt:
    name: unzip
    state: present
    update_cache: yes
  # ignore_errors: true

- name: Install Bun via curl
  ansible.builtin.shell: |
    curl -fsSL https://bun.sh/install | bash

- name: Add Bun Envs to ~/.bashrc
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: "{{ item }}"
    create: yes
  with_items:
    - 'export BUN_INSTALL=\"{{ ansible_env.HOME }}/.bun\"'
    - 'export PATH=\"{{ ansible_env.HOME }}/.bun/bin:$PATH\"'

- name: Source ~/.bashrc
  ansible.builtin.shell: |
    source {{ ansible_env.HOME }}/.bashrc
  args:
    executable: /bin/bash

- name: Verify if Bun is installed
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.bun/bin/bun"
  register: bun_binary

# Debug PATH and check Bun
# - name: Debug PATH and Bun binary
#   ansible.builtin.shell: |
#     echo $PATH
#     ls -l {{ ansible_env.HOME }}/.bun/bin/bun
#   register: debug_output
#   ignore_errors: true

# - name: Output Debug Information
#   ansible.builtin.debug:
#     msg: "{{ debug_output.stdout_lines }}"

- name: Clone ElysiaJs Snippet from Abhishek-M-K
  become: true
  ansible.builtin.git:
    repo: "https://github.com/Abhishek-M-K/ElysiaJs-Redis.git"
    dest: "/home/ubuntu/ElysiaJs-Redis"
    clone: yes
    update: yes
  when: bun_binary.stat.exists

- name: Install application dependencies
  become: true
  ansible.builtin.shell: |
    /home/ubuntu/.bun/bin/bun install
  args:
    chdir: "/home/ubuntu/ElysiaJs-Redis"
  when: bun_binary.stat.exists

# Application is not running ðŸ˜ž
- name: Run the application
  become: true
  become_user: ubuntu # Run the command as ubuntu user (Tested via EC2 connect)
  # async: 60 # Run the command in the background
  # poll: 0 # Do not wait for the command to finish
  ansible.builtin.shell: |
    /home/ubuntu/.bun/bin/bun dev --port 8888
  args:
    chdir: "/home/ubuntu/ElysiaJs-Redis"
  register: app_run
  when: bun_binary.stat.exists
  ignore_errors: true
  environment:
    BUN_INSTALL: "{{ ansible_env.HOME }}/.bun"
    PATH: "{{ ansible_env.HOME }}/.bun/bin:{{ ansible_env.PATH }}"

- name: Display the output of the application
  ansible.builtin.debug:
    var: app_run
  
# - name: Install Bun
#   become: true
#   ansible.builtin.shell: |
#     curl -fsSL https://bun.sh/install | bash
#     echo "export BUN_INSTALL=\"/root/.bun\"" >> /root/.bashrc
#     echo "export PATH=\"/root/.bun/bin:\$PATH\"" >> /root/.bashrc
#     source /root/.bashrc
#   args:
#     executable: /bin/bash
#     creates: "/root/.bun/bin/bun"
#   ignore_errors: true
# ansible.builtin.shell: |
#   curl -fsSL https://bun.sh/install | bash
# args:
#   executable: /bin/bash
#   creates: "/root/.bun/bin/bun"
